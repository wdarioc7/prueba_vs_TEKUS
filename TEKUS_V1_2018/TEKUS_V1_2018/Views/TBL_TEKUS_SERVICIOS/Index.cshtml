@model PagedList.IPagedList<TEKUS_V1_2018.Models.TBL_TEKUS_SERVICIOS>


@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    @using PagedList.Mvc;
    <link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
    <script src="http://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
    <style>
        table.blueTable {
            border: 1px solid #1C6EA4;
            background-color: #EEEEEE;
            width: 100%;
            text-align: left;
            border-collapse: collapse;
        }

            table.blueTable td, table.blueTable th {
                border: 1px solid #AAAAAA;
                padding: 3px 2px;
            }

            table.blueTable tbody td {
                font-size: 13px;
            }

            table.blueTable tr:nth-child(even) {
                background: #D0E4F5;
            }

            table.blueTable thead {
                background: #1C6EA4;
                background: -moz-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
                background: -webkit-linear-gradient(top, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
                background: linear-gradient(to bottom, #5592bb 0%, #327cad 66%, #1C6EA4 100%);
                border-bottom: 2px solid #444444;
            }

                table.blueTable thead th {
                    font-size: 15px;
                    font-weight: bold;
                    color: #FFFFFF;
                    border-left: 2px solid #D0E4F5;
                }

                    table.blueTable thead th:first-child {
                        border-left: none;
                    }

            table.blueTable tfoot {
                font-size: 14px;
                font-weight: bold;
                color: #FFFFFF;
                background: #D0E4F5;
                background: -moz-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);
                background: -webkit-linear-gradient(top, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);
                background: linear-gradient(to bottom, #dcebf7 0%, #d4e6f6 66%, #D0E4F5 100%);
                border-top: 2px solid #444444;
            }

                table.blueTable tfoot td {
                    font-size: 14px;
                }

                table.blueTable tfoot .links {
                    text-align: right;
                }

                    table.blueTable tfoot .links a {
                        display: inline-block;
                        background: #1C6EA4;
                        color: #FFFFFF;
                        padding: 2px 8px;
                        border-radius: 5px;
                    }
    </style>
</head>



<h2>Index</h2>



<script>
    var app = angular.module('myApp', []);
    app.controller('customersCtrl', function ($scope, $http) {
        $http.get("http://www.w3schools.com/angular/customers.php")
            .success(function (response) { $scope.names = response.records; });
    });
</script>


<p>
    @Html.ActionLink("Crear Nuevo registro", "Create")
</p>
<p>
    @Html.ActionLink("Eliminar todos los registros de la BASE DE DATOS", "DeleteTotal","TBL_TEKUS_SERVICIOS")
</p>
<p>CANTIDAD DE SERVICIOS: @ViewBag.Servicios</p>
<p>


    @Html.ListBox("ListaPaises", new SelectList(ViewBag.paises), htmlAttributes: new { @style = "width:280px;height :90px" })


</p>
@using (Html.BeginForm())
{
    <p>
        Find by name: @Html.TextBox("SearchString")
        <input type="submit" value="Search" />
    </p>
}
    <div class="container">
        @*<div class="container">
            <h4>Filtro:</h4>
            <input type="search" ng-model="filtro" placeholder="Ingrese filtro...">
        </div>*@
        <br />
        <table ng-table="tableParams" show-filter="true" class="table blueTable">
            <tr ng-repeat="customer in $data">
                <th data-title="'Name'" sortable="'name'" filter="{ 'name': 'text' }">
                    @*@Html.DisplayNameFor(model => model.NOMBRE)*@
                    @Html.ActionLink("Nombre del Servicio", "Index", new { sortOrder = ViewBag.NameSortParm })
                </th>
                <th data-title="'Address'" sortable="'address'" filter="{ 'address': 'text' }">
                    @*@Html.DisplayNameFor(model => model.VPORHORA)*@
                    @Html.ActionLink("Valor por hora", "Index", new { sortOrder = ViewBag.UnitPriceSortParm })
                </th>
                <th data-title="'State'" sortable="'state'" filter="{ 'state': 'text' }">
                    @Html.ActionLink("Nombre del cliente", "Index", new { sortOrder = ViewBag.UnitPriceSortParm })
                    @*@Html.DisplayNameFor(model => model.TBL_TEKUS_CLIENTES.NOMBRE)*@
                </th>
                <th data-title="'Country'" sortable="'country'" filter="{ 'country': 'text' }">
                    @Html.ActionLink("Pais", "Index", new { sortOrder = ViewBag.UnitPriceSortParm })
                    @*@Html.DisplayNameFor(model => model.TBL_TEKUS_PAIS.NOMBRE)*@
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
                <tr ng-repeat="item in Model | filter:filtro as resultado">
                    <td>
                        @Html.DisplayFor(modelItem => item.NOMBRE)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.VPORHORA)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TBL_TEKUS_CLIENTES.NOMBRE)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TBL_TEKUS_PAIS.NOMBRE)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Edit", new { id = item.ID_SERVICIOS }) |
                        @Html.ActionLink("Details", "Details", new { id = item.ID_SERVICIOS }) |
                        @Html.ActionLink("Delete", "Delete", new { id = item.ID_SERVICIOS })
                    </td>
                </tr>
            }

        </table>
        <br />
        Page @(Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index",
            new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
    </div>
